\name{inhull}
\alias{inhull}
\title{
Find Points Within the Hull of a Mosaic Graph
}
\description{
Determines whether a set of coordinates falls within the hull of a mosaic graph.
}
\usage{
inhull(m,x,y)
}
\arguments{
  \item{m}{
A mosaic object generated by the \link{mgraph} function and then passed through the \link{mhull} function.
}
}
\details{
This function implements algorithm 1 of Hao et al. 2018 (doi:10.3390/sym10100477).
}
\value{
  \item{x }{The supplied x coordinates.}
  \item{y }{The supplied y coordinates.}
  \item{within }{A binary vector recording whether the points are outside (0) or inside (1) the hull.}
}
\references{
Alroy, J. A simple graph theoretic method provides accurate range area estimates. To be submitted to \emph{Ecology Letters}.

Hao, J., J. Sun, Y. Chen, Q. Cai, and L. Tan. 2018. Optimal reliable point-in-polygon test and differential coding boolean operations on polygons. \emph{Symmetry} 10, 477. doi:10.3390/sym10100477.
}
\author{
John Alroy
}
\examples{
x <- runif(50)
y <- runif(50)
m <- mgraph(x,y)
m <- mhull(m)
i <- inhull(m,runif(1000),runif(1000))

# plot which points are in the hull
par(mar=c(0, 0, 0, 0))
plot(i$x,i$y,col=hsv(h=0.6 * i$within + 0.15),pch=19)
par(mar=c(5, 4, 4, 2) + 0.1)

# add the outline of the hull
polygon(m$hull.x,m$hull.y,xpd=NA)
}
